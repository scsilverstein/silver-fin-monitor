version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: silver-fin-monitor:latest
    container_name: silver-fin-app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - silver-fin-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Feed processor worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: silver-fin-monitor:latest
    container_name: silver-fin-worker
    restart: unless-stopped
    command: ["node", "dist/services/workers/feed-processor.worker.js"]
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    networks:
      - silver-fin-network
    depends_on:
      - app

  # Optional Redis for caching (if needed for scaling)
  redis:
    image: redis:7-alpine
    container_name: silver-fin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - silver-fin-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: silver-fin-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - silver-fin-network
    depends_on:
      - app

networks:
  silver-fin-network:
    driver: bridge

volumes:
  redis-data:
    driver: local