#!/bin/bash

# Silver Fin Monitor - Setup Script
# This script sets up the complete development environment

echo "üöÄ Silver Fin Monitor - Complete System Setup"
echo "============================================="
echo ""

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js is not installed. Please install Node.js 18+ first."
    exit 1
fi

# Check Node.js version
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå Node.js version 18+ required. Current version: $(node -v)"
    exit 1
fi

echo "‚úÖ Node.js version: $(node -v)"
echo ""

# Install backend dependencies
echo "üì¶ Installing backend dependencies..."
npm install
if [ $? -ne 0 ]; then
    echo "‚ùå Backend dependency installation failed"
    exit 1
fi
echo "‚úÖ Backend dependencies installed"
echo ""

# Install frontend dependencies
echo "üì¶ Installing frontend dependencies..."
cd frontend
npm install
if [ $? -ne 0 ]; then
    echo "‚ùå Frontend dependency installation failed"
    exit 1
fi
cd ..
echo "‚úÖ Frontend dependencies installed"
echo ""

# Copy environment file if it doesn't exist
if [ ! -f .env ]; then
    echo "‚öôÔ∏è  Setting up environment configuration..."
    cp .env.example .env
    echo "‚úÖ Environment file created (.env)"
    echo "   üëâ Please edit .env file with your API keys and database credentials"
else
    echo "‚úÖ Environment file already exists"
fi
echo ""

# Run integration test
echo "üîç Running integration verification..."
node test-integration.js
echo ""

# Check TypeScript compilation
echo "üîß Checking TypeScript compilation..."
echo "Backend compilation:"
npx tsc --noEmit --skipLibCheck 2>/dev/null && echo "‚úÖ Backend TypeScript OK" || echo "‚ö†Ô∏è  Backend TypeScript issues (likely missing .env values)"

echo "Frontend compilation:"
cd frontend
npx tsc --noEmit --skipLibCheck 2>/dev/null && echo "‚úÖ Frontend TypeScript OK" || echo "‚ö†Ô∏è  Frontend TypeScript issues (likely missing dependencies)"
cd ..
echo ""

# Display setup completion
echo "üéâ SETUP COMPLETE!"
echo "=================="
echo ""
echo "Your Silver Fin Monitor system is ready! Here's what's been set up:"
echo ""
echo "‚úÖ Backend Server (Express + TypeScript)"
echo "  ‚Ä¢ JWT Authentication with RBAC"
echo "  ‚Ä¢ WebSocket real-time communication"
echo "  ‚Ä¢ Multi-source feed processing"
echo "  ‚Ä¢ AI analysis pipeline (GPT-4)"
echo "  ‚Ä¢ Stock scanner with peer comparison"
echo "  ‚Ä¢ System monitoring and alerting"
echo "  ‚Ä¢ Database queue and cache systems"
echo ""
echo "‚úÖ Frontend Application (React + TypeScript)"
echo "  ‚Ä¢ Modern UI with Tailwind CSS"
echo "  ‚Ä¢ Real-time dashboard"
echo "  ‚Ä¢ Admin panel with system monitoring"
echo "  ‚Ä¢ WebSocket integration"
echo "  ‚Ä¢ Zustand state management"
echo ""
echo "‚úÖ Database Integration"
echo "  ‚Ä¢ PostgreSQL via Supabase"
echo "  ‚Ä¢ Queue system (no Redis needed)"
echo "  ‚Ä¢ Cache layer with TTL"
echo "  ‚Ä¢ Vector embeddings support"
echo ""
echo "‚úÖ External Integrations"
echo "  ‚Ä¢ OpenAI GPT-4 for analysis"
echo "  ‚Ä¢ Local Whisper for transcription"
echo "  ‚Ä¢ Yahoo Finance + Alpha Vantage"
echo "  ‚Ä¢ Email/Slack/Webhook alerts"
echo ""

# Display next steps
echo "üöÄ NEXT STEPS:"
echo "=============="
echo ""
echo "1. üìù Configure your API keys in .env file:"
echo "   ‚Ä¢ SUPABASE_URL and SUPABASE_ANON_KEY"
echo "   ‚Ä¢ OPENAI_API_KEY for AI analysis"
echo "   ‚Ä¢ YOUTUBE_API_KEY for YouTube feeds (optional)"
echo "   ‚Ä¢ SMTP settings for email alerts (optional)"
echo ""
echo "2. üóÑÔ∏è  Set up your Supabase database:"
echo "   ‚Ä¢ Create a new Supabase project"
echo "   ‚Ä¢ Run: npm run db:migrate"
echo ""
echo "3. üé¨ Start the development servers:"
echo "   ‚Ä¢ Backend:  npm run dev"
echo "   ‚Ä¢ Frontend: cd frontend && npm run dev"
echo ""
echo "4. üåê Access your application:"
echo "   ‚Ä¢ Frontend: http://localhost:5173"
echo "   ‚Ä¢ Backend:  http://localhost:3001/api/v1"
echo "   ‚Ä¢ Admin:    http://localhost:5173/admin"
echo ""
echo "5. üìö Read the documentation:"
echo "   ‚Ä¢ CLAUDE.md - Complete system specification"
echo "   ‚Ä¢ INTEGRATION_GUIDE.md - Integration details"
echo ""

# Display additional help
echo "üí° HELPFUL COMMANDS:"
echo "==================="
echo ""
echo "‚Ä¢ npm run dev            - Start backend server"
echo "‚Ä¢ npm run build          - Build for production"
echo "‚Ä¢ npm run test           - Run tests"
echo "‚Ä¢ npm run typecheck      - Check TypeScript"
echo "‚Ä¢ npm run lint           - Check code style"
echo "‚Ä¢ node test-integration.js - Verify system integration"
echo ""

# Display support information
echo "üÜò NEED HELP?"
echo "============="
echo ""
echo "‚Ä¢ Check INTEGRATION_GUIDE.md for detailed setup"
echo "‚Ä¢ Review CLAUDE.md for complete documentation"
echo "‚Ä¢ Verify .env configuration matches your services"
echo "‚Ä¢ Ensure Supabase database is properly configured"
echo ""

echo "üéä Happy coding with Silver Fin Monitor!"
echo ""